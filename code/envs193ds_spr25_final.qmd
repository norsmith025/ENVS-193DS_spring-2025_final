---
title: "envs193ds_spr25_final"
author: "Nora Smith"
date: 2025-06-10
format: html
editor: visual
---

# Part 1. Set up tasks

## Set up

```{r}
#| message: FALSE

# read in packages 
library(tidyverse) # load tidyverse
library(janitor) # load janitor
library(MuMIn) # load MuMIn
library(readxl) # load readxl
library(DHARMa) # load DHARMa
library(flextable) # load flextable
library(rstatix) # load rstatix
library(gt) # load gt
library(here) # load here

# read in data
sst <- read_csv("data/SST_update2023.csv") # create sst object from SST_update2023 
occdist <- read_csv("data/occdist.csv") # create occdist object from occdist
```

# Part 2. Problems

## Problem 1. Research writing

### a. Transparent statistical methods

In part 1, they likely used a Pearson's r test, since they analyzed the relationship between two continuous variables (distance and annual nitrogen load). In part 2, they likely used ANOVA, since they compared the mean/average nitrogen loads between sources (urban land, atmospheric deposition, fertilizer, wastewater treatment, and grasslands).

### b. More information needed

One thing that could have been added to the results section is a post-hoc test, which would communicate which groups differ, instead of just telling that there is a difference between the groups; an example of a post-hoc test that could be used is the Tukey's Honestly Significant Difference (HSD). This would allow the results to go beyond "we reject the null hypothesis that there is no difference in average nitrogen load..." and be able to communicate which of the groups from urban land, atmospheric deposition, fertilizer, wastewater treatment, and grasslands differ the most. Another thing that would add more context to the results could be providing the mean of each groups' nitrogen load and their standard deviations. Knowing the mean for each groups' would allow the reader to know how much the nitrogen load differs per source category, and the standard deviations would help show dispersed the nitrogen load is per source category.

### c. Suggestions for rewriting

We found that there was a direct relationship between sources' distance from headwaters (km) and the annual total nitrogen loads (km). (Pearson's r test: *r* = correlation coefficient, *p* = 0.03, α = significance level, *n* = sample size). We also found that nitrogen load varied by source type, with certain land-uses impacting the nitrogen load more than others, indicating that land-use can influence nitrogen loading. The post-hoc Tukey's HSD test identifies \_\_\_ as the source(s) that differ(s) the most. (ANOVA: *F* = F-statistic, *p* = 0.02, α = significance level, *df* = degress of freedom, *n* = sample size)

## Problem 2

### a. Cleaning and Summarizing

```{r}
sst_clean <- sst |> # create sst_clean object from sst data frame
  mutate(date = ymd(date)) |> # convert to date format
  mutate(year = year(date), # pull out year
         month = month(date, label = TRUE, abbr = TRUE)) |> # pull out month as factor
  filter(year %in% 2018:2023) |> # filter years, keeping 2018-2023
  group_by(year, month) |> # group by year and month
  summarize(mean_monthly_sst = mean(temp, na.rm = TRUE), # average temp across sites
            .groups = "drop") |> # return data frame ungrouped
  mutate(year = factor(year)) # convert year to a factor

# create data frame
sst_clean |> slice_sample(n = 5) # display sample of 5 rows from cleaned data
str(sst_clean) # display structure of cleaned data 
  
```

### b. Visualize the data

```{r}
# recreate the visualization
ggplot(sst_clean, aes(x = month, y = mean_monthly_sst, group = year, color = year)) + geom_line(linewidth = 1) +
  geom_point(size = 2) + 
  scale_color_manual(values = colorRampPalette(c("darkseagreen2", "black"))(6)) + 
  labs(x = "Month",
       y = "Mean monthly sea surface temperature (°C)",
       color = "Year") +
  theme_minimal() +
  theme(panel.grid = element_blank(),
        panel.border = element_rect(color = "darkgrey", fill = NA),
        panel.background = element_rect(fill = "white"),
        legend.position = c(0.15, 0.8),
        legend.title = element_text(size = 10),
        legend.text = element_text(size=8))
```
